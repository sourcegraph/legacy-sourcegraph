#!/usr/bin/env bash

set -eux

# Honeycomb's buildevent plumbing.
# -------------------------------

echo "~~~ Setting up Honeycomb tracing for the build"

envsubst <./enterprise/dev/ci/scripts/buildevent_file >.buildevent_file
BUILDEVENT_FILE="$(pwd)/.buildevent_file"
export BUILDEVENT_FILE

# Record start time if we need to exit
BUILD_START_TIME=$(curl --retry 10 --retry-delay 2 -H "Authorization: Bearer $BUILDKITE_API_TOKEN" "https://api.buildkite.com/v2/organizations/$BUILDKITE_ORGANIZATION_SLUG/pipelines/$BUILDKITE_PIPELINE_SLUG/builds/$BUILDKITE_BUILD_NUMBER/" | jq -r .started_at)

# Convert to UTC & Epoch
BUILD_START_TIME=$(TZ=UTC date -d "$BUILD_START_TIME" +'%s')
export BUILD_START_TIME

# Init the step
STEP_START=$(date +'%s')
export STEP_START

# Create the folder for annotations
mkdir -p ./annotations/

# asdf setup
# ----------

if [[ "$BUILDKITE_AGENT_META_DATA_QUEUE" != "bazel" ]]; then
  echo "~~~ Preparing asdf dependencies"

  if [[ "$BUILDKITE_STEP_KEY" == "pipeline-gen" ]]; then
    echo "pipeline-gen step: running go install only"
    asdf install golang
  elif [[ "$BUILDKITE_STEP_KEY" == "pipeline-upload" ]]; then
    echo "pipeline-upload step: skipping asdf install"
  else
    echo "running normal install"
    ./dev/ci/asdf-install.sh
  fi
else
  echo "build --test_env=GH_TOKEN=${GH_TOKEN}" >user.bazelrc
  echo "--- Running a daemonized image as the test subject..."
  CLEAN="true" ALLOW_SINGLE_DOCKER_CODE_INSIGHTS="true" ./dev/run-server-image.sh -d --name sourcegraph

  SOURCEGRAPH_BASE_URL="http://localhost:7080"
  echo "--- Waiting for $SOURCEGRAPH_BASE_URL to be up"
  set +e
  timeout 120s bash -c "until curl --output /dev/null --silent --head --fail $SOURCEGRAPH_BASE_URL; do
    echo Waiting 5s for $SOURCEGRAPH_BASE_URL...
    sleep 5
    done"
  # Only enable when you're debugging, this produces about 300 log files
  # export BUILDKITE_ARTIFACT_PATHS="$(bazel info bazel-testlogs)/**/*.log"
fi
