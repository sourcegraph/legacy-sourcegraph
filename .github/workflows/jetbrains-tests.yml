# GitHub Actions Workflow created for testing the JetBrains extension plugin in following steps:
# - validate Gradle Wrapper
# - run 'test' tasks
# - run 'runPluginVerifier' task
#
# Note: This workflow works in isolation to the JavaScript artifacts necessary for full testing. It
#       is intended to only test if the Java plugin compiles without issues.

name: JetBrains Tests
on:
  # Trigger the workflow on any pull request that touches the jetbrains src folder
  pull_request:
      paths:
       - client/jetbrains/**

jobs:
  # Run Gradle Wrapper Validation Action to verify the wrapper's checksum
  # Run verifyPlugin, IntelliJ Plugin Verifier, and test Gradle tasks
  # Build plugin and provide the artifact for the next workflow jobs
  build:
    name: Build
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: client/jetbrains
    outputs:
      version: ${{ steps.properties.outputs.version }}
      changelog: ${{ steps.properties.outputs.changelog }}
    steps:
      # Check out current repository
      - name: Fetch Sources
        uses: actions/checkout@v2.4.0

      # Validate wrapper
      - name: Gradle Wrapper Validation
        uses: gradle/wrapper-validation-action@v1.0.4

      # Setup Java 11 environment for the next steps
      - name: Setup Java
        uses: actions/setup-java@v2
        with:
          distribution: zulu
          java-version: 11
          cache: gradle

      # Set environment variables
      # - name: Export Properties
      #   id: properties
      #   shell: bash
      #   run: |
      #       PROPERTIES="$(./gradlew properties --console=plain -q)"
      #       VERSION="$(echo "$PROPERTIES" | grep "^version:" | cut -f2- -d ' ')"
      #       NAME="$(echo "$PROPERTIES" | grep "^pluginName:" | cut -f2- -d ' ')"
      #       CHANGELOG="$(./gradlew getChangelog --unreleased --no-header --console=plain -q)"
      #       CHANGELOG="${CHANGELOG//'%'/'%25'}"
      #       CHANGELOG="${CHANGELOG//$'\n'/'%0A'}"
      #       CHANGELOG="${CHANGELOG//$'\r'/'%0D'}"

      #       echo "::set-output name=version::$VERSION"
      #       echo "::set-output name=name::$NAME"
      #       echo "::set-output name=changelog::$CHANGELOG"
      #       echo "::set-output name=pluginVerifierHomeDir::~/.pluginVerifier"

      #     ./gradlew listProductsReleases # prepare list of IDEs for Plugin Verifier

      - name: Run Tests
        run: ./gradlew test

      - name: Run Plugin Verifier
        run: ./gradlew runPluginVerifier
