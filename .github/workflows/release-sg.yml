name: sg-release

on:
  push:
    path:
      - dev/sg

env:
  # # Ensure that we still have a chance to remove tags even after release.
  # # See also release.yaml.
  # GOPRIVATE: github.com/genjidb/genji
  # Enable reproducible builds.
  GOFLAGS: -trimpath
  CGO_ENABLED: '1'
  # GO_EXTLINK_ENABLED: '0'

# defaults:
#   run:
#     working-directory: dev/sg

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        os:
          - linux
          # - darwin
        arch:
          - amd64
          # - arm64
    env:
      GOOS: ${{ matrix.os }}
      GOARCH: ${{ matrix.arch }}
    steps:
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.17

      # - name: Get Go environment
      #   id: go-env
      #   run: |
      #     echo "::set-output name=path::$(go env GOPATH)"
      #     echo "::set-output name=exe::$(go env GOEXE)"
      #     echo "::set-output name=hostos::$(go env GOHOSTOS)"
      #     echo "::set-output name=hostarch::$(go env GOHOSTARCH)"
      #     echo "::set-output name=cache::$(go env GOCACHE)"
      #     echo "::set-output name=modcache::$(go env GOMODCACHE)"

      # - name: Get asset name
      #   id: asset
      #   run: echo "::set-output name=filename::sg_${GOOS}_${GOARCH}${GOEXE}"
      #   env:
      #     GOEXE: ${{ steps.go-env.outputs.exe }}

      - name: Build release asset
        run: |
          go help
          cd dev/sg && go install -ldflags "-X main.BuildCommit=$(git rev-list -1 HEAD .)" .

      - name: Move asset to GOPATH/bin
        if: ${{ steps.go-env.outputs.hostos != matrix.os || steps.go-env.outputs.hostarch != matrix.arch }}
        working-directory: ${{ steps.go-env.outputs.path }}/bin/${{ matrix.os }}_${{ matrix.arch }}
        run: mv sg"${GOEXE}" ..
        env:
          GOEXE: ${{ steps.go-env.outputs.exe }}

      - name: Move asset to workspace
        working-directory: ${{ steps.go-env.outputs.path }}/bin
        run: mv sg"${GOEXE}" "${workspace}"/"${filename}"
        env:
          GOEXE: ${{ steps.go-env.outputs.exe }}
          workspace: ${{ github.workspace }}
          filename: ${{ steps.asset.outputs.filename }}

      - uses: actions-ecosystem/action-push-tag@v1
        with:
          tag: build-${{ github.sha }}
          message: 'snapshot sg release ${{ github.sha }}'

      - name: Upload release asset
        run: gh release upload -R="${repo}" "${tag_name}" "${filename}"
        env:
          repo: sourcegraph/sg
          tag_name: latest
          filename: ${{ steps.asset.outputs.filename }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
