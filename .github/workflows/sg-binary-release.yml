name: sg-binary-release

on:
  push:
    path:
      - dev/sg

env:
  GOFLAGS: -trimpath
  CGO_ENABLED: '0'

jobs:
  set-release-name:
    name: set-release-name
    runs-on: ubuntu-latest
    steps:
      - name: compute-release-name
        run: |
          today=$(date +'%Y-%m-%d')
          short_sha=$(echo ${{ github.sha }} | cut -c1-8)
          echo "::set-output name=release-name::${today}-${short_sha}"

  create-release:
    name: create-release
    needs: set-release-name
    runs-on: ubuntu-latest
    steps:
      - name: Create Release
        run: |
          gh release delete -R="${repo}" ${release_name} || true
          gh release create -R="${repo}" ${release_name} --notes "sg release ${release_name}"
        env:
          repo: sourcegraph/sg
          release_name: ${{ steps.set-release-name.outputs.release-name }}
          GITHUB_TOKEN: ${{ secrets.SG_RELEASE_TOKEN }}

  build:
    name: Build
    needs: create-release
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        os:
          - linux
          - darwin
        arch:
          - amd64
          - arm64
    env:
      GOOS: ${{ matrix.os }}
      GOARCH: ${{ matrix.arch }}
    steps:
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.17

      - name: Checkout
        uses: actions/checkout@v2

      - name: Get Go environment
        id: go-env
        run: |
          echo "::set-output name=path::$(go env GOPATH)"
          echo "::set-output name=exe::$(go env GOEXE)"
          echo "::set-output name=hostos::$(go env GOHOSTOS)"
          echo "::set-output name=hostarch::$(go env GOHOSTARCH)"
          echo "::set-output name=cache::$(go env GOCACHE)"
          echo "::set-output name=modcache::$(go env GOMODCACHE)"

      - name: Get asset name
        id: asset
        run: echo "::set-output name=filename::sg_${GOOS}_${GOARCH}${GOEXE}"
        env:
          GOEXE: ${{ steps.go-env.outputs.exe }}

      - name: Build release asset
        run: |
          cd dev/sg && go install -ldflags "-X main.BuildCommit=$(git rev-list -1 HEAD .)" .

      - name: Move asset to GOPATH/bin
        if: ${{ steps.go-env.outputs.hostos != matrix.os || steps.go-env.outputs.hostarch != matrix.arch }}
        working-directory: ${{ steps.go-env.outputs.path }}/bin/${{ matrix.os }}_${{ matrix.arch }}
        run: mv sg"${GOEXE}" ..
        env:
          GOEXE: ${{ steps.go-env.outputs.exe }}

      - name: Move asset to workspace
        working-directory: ${{ steps.go-env.outputs.path }}/bin
        run: mv sg"${GOEXE}" "${workspace}"/"${filename}"
        env:
          GOEXE: ${{ steps.go-env.outputs.exe }}
          workspace: ${{ github.workspace }}
          filename: ${{ steps.asset.outputs.filename }}

      - name: Upload release asset
        run: |
          gh release upload -R="${repo}" ${release_name} "${filename}"
        env:
          repo: sourcegraph/sg
          release_name: ${{ steps.set-release-name.outputs.release-name }}
          filename: ${{ steps.asset.outputs.filename }}
          GITHUB_TOKEN: ${{ secrets.SG_RELEASE_TOKEN }}
