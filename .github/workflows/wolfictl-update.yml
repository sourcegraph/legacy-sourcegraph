name: 'wolfictl-update'

on:
  push:
  # schedule:
    # everyday at 0:00 UTC
    # - cron:  0 0 * * *
  workflow_dispatch: {}

permissions:
  contents: read
  pull-requests: write
  issues: write

jobs:
  wolfictl-update:
    name: Wolfictl Update
    runs-on: ubuntu-latest

    steps:
      # Install wolfictl
      # NOTE: The main wolfictl binary has a bug which prevents us from using it
      # Once https://github.com/wolfi-dev/wolfictl/pull/763 is merged, we can remove the following which
      # builds wolfictl from a patched fork.

      # Build and install a fork of wolfictl
      - name: Check out code from external repository
        uses: actions/checkout@v4
        with:
          repository: 'willdollman/wolfictl'
          ref: 'main'
          token: ${{ secrets.GITHUB_TOKEN }}
          path: 'wolfictl'

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
         go-version: '1.22.2'

      - name: Build binary
        run: |
          cd $GITHUB_WORKSPACE/wolfictl
          ls -al ./
          go build -o wolfictl ./
          ls -al ./

      - name: Add wolfictl to path
        run: |
          TMP=$(mktemp -d)
          echo "Temp dir: $TMP"
          cd $GITHUB_WORKSPACE/wolfictl
          ls -al ./
          mv ./wolfictl $TMP/
          ls -al $TMP
          echo "$TMP" >> $GITHUB_PATH

      # TODO: Replace above wolfictl build step once the bugfix PR is accepted
      # TODO: Pin commit hash
      # - uses: wolfi-dev/actions/install-wolfictl@main

      - name: Check wolfictl
        run: |
          which wolfictl
          wolfictl version

      - name: "wolfictl update"
        run: |
          DRY_RUN='--dry-run'
          echo "Github ref is $GITHUB_REF and parsed ref is ${GITHUB_REF##*/}"
          if [[ "${GITHUB_REF##*/}" == "main" ]]; then
            echo "This is the main branch."
            DRY_RUN=''
          fi
          echo "Dryrun is $DRY_RUN"
          wolfictl update --dry-run --create-issues='false' --package-name='qdrant' --path='wolfi-packages/' --github-labels='SSDLC' --github-labels='security-auto-update' --github-labels='security-auto-update/packages' $GITHUB_SERVER_URL/$GITHUB_REPOSITORY
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
