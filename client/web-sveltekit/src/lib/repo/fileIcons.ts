import { containsTest } from "$lib/web"
import {
    mdiBash,
    mdiCodeJson,
    mdiDocker,
    mdiFileCode,
    mdiFileGifBox,
    mdiFileJpgBox,
    mdiFilePngBox,
    mdiGit,
    mdiGraphql,
    mdiLanguageC,
    mdiLanguageCpp,
    mdiLanguageCsharp,
    mdiLanguageCss3,
    mdiLanguageFortran,
    mdiLanguageGo,
    mdiLanguageHaskell,
    mdiLanguageHtml5,
    mdiLanguageJava,
    mdiLanguageJavascript,
    mdiLanguageKotlin,
    mdiLanguageLua,
    mdiLanguageMarkdown,
    mdiLanguageMarkdownOutline,
    mdiLanguagePhp,
    mdiLanguagePython,
    mdiLanguageR,
    mdiLanguageRuby,
    mdiLanguageRust,
    mdiLanguageSwift,
    mdiLanguageTypescript,
    mdiNpm,
    mdiReact,
    mdiSvg,
    mdiText,
} from '@mdi/js'

// Icon Colors
const BLUE = 'var(--blue)'
const PINK = 'var(--pink)'
const YELLOW = 'var(--yellow)'
const RED = 'var(--red)'
const GRAY = 'var(--gray)'
const GREEN = 'var(--green)'
const CYAN = 'var(--blue)'
const DEFAULT_ICON = 'var(--gray-07)'

export enum FileExtension {
    ASSEMBLY = 'asm',
    BASH = 'sh',
    BASIC = 'vb',
    C = 'c',
    CLOJURE_CLJ = 'clj',
    CLOJURE_CLJS = 'cljs',
    CLOJURE_CLJR = 'cljr',
    CLOJURE_CLJC = 'cljc',
    CLOJURE_EDN = 'edn',
    COFFEE = 'coffee',
    CPP = 'cc',
    CSHARP = 'cs',
    CSS = 'css',
    DART = 'dart',
    DEFAULT = 'default',
    DOCKERFILE = 'Dockerfile',
    DOCKERIGNORE = 'dockerignore',
    FORTRAN_F = 'f',
    FORTRAN_FOR = 'for',
    FORTRAN_FTN = 'ftn',
    FSHARP = 'fs',
    FSI = 'fsi',
    FSX = 'fsx',
    GIF = 'gif',
    GIFF = 'giff',
    GITIGNORE = 'gitignore',
    GITATTRIBUTES = 'gitattributes',
    GO = 'go',
    GOMOD = 'mod',
    GOSUM = 'sum',
    GRAPHQL = 'graphql',
    GROOVY = 'groovy',
    HASKELL = 'hs',
    HTML = 'html',
    JAVA = 'java',
    JAVASCRIPT = 'js',
    JPG = 'jpg',
    JPEG = 'jpeg',
    JSON = 'json',
    JSX = 'jsx',
    JULIA = 'jl',
    KOTLIN = 'kt',
    LOCKFILE = 'lock',
    LUA = 'lua',
    MARKDOWN = 'md',
    MDX = 'mdx',
    NCL = 'ncl',
    NIX = 'nix',
    NPM = 'npmrc',
    OCAML = 'ml',
    PHP = 'php',
    PERL = 'pl',
    PERL_PM = 'pm',
    PNG = 'png',
    POWERSHELL_PS1 = 'ps1',
    POWERSHELL_PSM1 = 'psm1',
    PYTHON = 'py',
    R = 'r',
    R_CAP = 'R',
    RUBY = 'rb',
    GEMFILE = 'Gemfile',
    RUST = 'rs',
    SCALA = 'scala',
    SASS = 'scss',
    SQL = 'sql',
    SVELTE = 'svelte',
    SVG = 'svg',
    SWIFT = 'swift',
    TEST = 'test',
    TYPESCRIPT = 'ts',
    TSX = 'tsx',
    TEXT = 'txt',
    YAML = 'yaml',
    YML = 'yml',
    ZIG = 'zig',
}

export interface IconInfoSvelte {
    svgPath: string
    color: string
}

export const FILE_ICONS: Map<FileExtension, IconInfoSvelte> = new Map([
    [FileExtension.ASSEMBLY, { svgPath: mdiFileCode, color: DEFAULT_ICON }],
    [FileExtension.BASH, { svgPath: mdiBash, color: DEFAULT_ICON }],
    [FileExtension.BASIC, { svgPath: mdiFileCode, color: DEFAULT_ICON }],
    [FileExtension.C, { svgPath: mdiLanguageC, color: BLUE }],
    [FileExtension.CLOJURE_CLJ, { svgPath: mdiFileCode, color: BLUE }],
    [FileExtension.CLOJURE_CLJC, { svgPath: mdiFileCode, color: BLUE }],
    [FileExtension.CLOJURE_CLJR, { svgPath: mdiFileCode, color: BLUE }],
    [FileExtension.CLOJURE_CLJS, { svgPath: mdiFileCode, color: BLUE }],
    [FileExtension.CLOJURE_EDN, { svgPath: mdiFileCode, color: BLUE }],
    [FileExtension.COFFEE, { svgPath: mdiFileCode, color: DEFAULT_ICON }],
    [FileExtension.CPP, { svgPath: mdiLanguageCpp, color: BLUE }],
    [FileExtension.CSHARP, { svgPath: mdiLanguageCsharp, color: BLUE }],
    [FileExtension.CSS, { svgPath: mdiLanguageCss3, color: BLUE }],
    [FileExtension.DART, { svgPath: mdiFileCode, color: BLUE }],
    [FileExtension.DEFAULT, { svgPath: mdiFileCode, color: GRAY }],
    [FileExtension.DOCKERFILE, { svgPath: mdiDocker, color: BLUE }],
    [FileExtension.DOCKERIGNORE, { svgPath: mdiDocker, color: BLUE }],
    [FileExtension.FORTRAN_F, { svgPath: mdiLanguageFortran, color: DEFAULT_ICON }],
    [FileExtension.FORTRAN_FOR, { svgPath: mdiLanguageFortran, color: DEFAULT_ICON }],
    [FileExtension.FORTRAN_FTN, { svgPath: mdiLanguageFortran, color: DEFAULT_ICON }],
    [FileExtension.FSHARP, { svgPath: mdiFileCode, color: BLUE }],
    [FileExtension.FSI, { svgPath: mdiFileCode, color: BLUE }],
    [FileExtension.FSX, { svgPath: mdiFileCode, color: BLUE }],
    [FileExtension.GIF, { svgPath: mdiFileGifBox, color: DEFAULT_ICON }],
    [FileExtension.GIFF, { svgPath: mdiFileGifBox, color: DEFAULT_ICON }],
    [FileExtension.GITIGNORE, { svgPath: mdiGit, color: RED }],
    [FileExtension.GITATTRIBUTES, { svgPath: mdiGit, color: RED }],
    [FileExtension.GO, { svgPath: mdiLanguageGo, color: BLUE }],
    [FileExtension.GOMOD, { svgPath: mdiLanguageGo, color: PINK }],
    [FileExtension.GOSUM, { svgPath: mdiLanguageGo, color: PINK }],
    [FileExtension.GROOVY, { svgPath: mdiFileCode, color: BLUE }],
    [FileExtension.GRAPHQL, { svgPath: mdiGraphql, color: PINK }],
    [FileExtension.HASKELL, { svgPath: mdiLanguageHaskell, color: BLUE }],
    [FileExtension.HTML, { svgPath: mdiLanguageHtml5, color: BLUE }],
    [FileExtension.JAVA, { svgPath: mdiLanguageJava, color: DEFAULT_ICON }],
    [FileExtension.JAVASCRIPT, { svgPath: mdiLanguageJavascript, color: YELLOW }],
    [FileExtension.JPG, { svgPath: mdiFileJpgBox, color: YELLOW }],
    [FileExtension.JPEG, { svgPath: mdiFileJpgBox, color: YELLOW }],
    [FileExtension.JSX, { svgPath: mdiReact, color: YELLOW }],
    [FileExtension.JSON, { svgPath: mdiCodeJson, color: DEFAULT_ICON }],
    [FileExtension.JULIA, { svgPath: mdiFileCode, color: DEFAULT_ICON }],
    [FileExtension.KOTLIN, { svgPath: mdiLanguageKotlin, color: GREEN }],
    [FileExtension.LOCKFILE, { svgPath: mdiCodeJson, color: DEFAULT_ICON }],
    [FileExtension.LUA, { svgPath: mdiLanguageLua, color: BLUE }],
    [FileExtension.MARKDOWN, { svgPath: mdiLanguageMarkdown, color: BLUE }],
    [FileExtension.MDX, { svgPath: mdiLanguageMarkdownOutline, color: BLUE }],
    [FileExtension.NCL, { svgPath: mdiFileCode, color: DEFAULT_ICON }],
    [FileExtension.NIX, { svgPath: mdiFileCode, color: GRAY }],
    [FileExtension.NPM, { svgPath: mdiNpm, color: RED }],
    [FileExtension.OCAML, { svgPath: mdiFileCode, color: YELLOW }],
    [FileExtension.PHP, { svgPath: mdiLanguagePhp, color: CYAN }],
    [FileExtension.PERL, { svgPath: mdiFileCode, color: DEFAULT_ICON }],
    [FileExtension.PERL_PM, { svgPath: mdiFileCode, color: DEFAULT_ICON }],
    [FileExtension.PNG, { svgPath: mdiFilePngBox, color: DEFAULT_ICON }],
    [FileExtension.POWERSHELL_PS1, { svgPath: mdiBash, color: DEFAULT_ICON }],
    [FileExtension.POWERSHELL_PSM1, { svgPath: mdiBash, color: DEFAULT_ICON }],
    [FileExtension.PYTHON, { svgPath: mdiLanguagePython, color: BLUE }],
    [FileExtension.R, { svgPath: mdiLanguageR, color: RED }],
    [FileExtension.R_CAP, { svgPath: mdiLanguageR, color: RED }],
    [FileExtension.RUBY, { svgPath: mdiLanguageRuby, color: RED }],
    [FileExtension.GEMFILE, { svgPath: mdiLanguageRuby, color: RED }],
    [FileExtension.RUST, { svgPath: mdiLanguageRust, color: DEFAULT_ICON }],
    [FileExtension.SCALA, { svgPath: mdiFileCode, color: RED }],
    [FileExtension.SASS, { svgPath: mdiFileCode, color: PINK }],
    [FileExtension.SQL, { svgPath: mdiFileCode, color: BLUE }],
    [FileExtension.SVELTE, { svgPath: mdiFileCode, color: RED }],
    [FileExtension.SVG, { svgPath: mdiSvg, color: BLUE }],
    [FileExtension.SWIFT, { svgPath: mdiLanguageSwift, color: BLUE }],
    [FileExtension.TYPESCRIPT, { svgPath: mdiLanguageTypescript, color: BLUE }],
    [FileExtension.TSX, { svgPath: mdiReact, color: BLUE }],
    [FileExtension.TEXT, { svgPath: mdiText, color: DEFAULT_ICON }],
    [FileExtension.YAML, { svgPath: mdiFileCode, color: DEFAULT_ICON }],
    [FileExtension.YML, { svgPath: mdiFileCode, color: DEFAULT_ICON }],
    [FileExtension.ZIG, { svgPath: mdiFileCode, color: YELLOW }],
])

interface FileInfo {
    extension: FileExtension
    isTest: boolean
}

export const getFileInfo = (file: string): FileInfo => {
    const extension = file.split('.').at(-1)
    const isValidExtension = Object.values(FileExtension).includes(extension as FileExtension)

    if (extension && isValidExtension) {
        return {
            extension: extension as FileExtension,
            isTest: containsTest(file),
        }
    }

    return {
        extension: 'default' as FileExtension,
        isTest: false,
    }
}
