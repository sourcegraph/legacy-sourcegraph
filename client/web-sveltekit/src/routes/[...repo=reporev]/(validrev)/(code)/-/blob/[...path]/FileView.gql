fragment FileViewGitBlob on GitBlob {
    canonicalURL
    binary
    content
    richHTML
    languages
    totalLines
    byteSize


    ...OpenInCodeHostAction
    ...FileIcon_GitBlob
}

fragment FileViewHighlightedFile on HighlightedFile {
    aborted
    lsif
}

fragment FileView_ResolvedRevision on Repository {
    externalRepository {
        serviceType
    }
    externalURLs {
        url
        serviceKind
    }
}

fragment FileViewCommit on GitCommit {
    canonicalURL
    abbreviatedOID
}

fragment FileViewCodeGraphData on CodeGraphData {
        provenance
        commit
        toolInfo {
            name
            version
        }

        # TODO: I do not think it is possible to use this pagination correctly.
        # We would need a GraphQL ID on the CodeGraphData node to request followup pages
        # for that element of the codeGraphData list
        occurrences(first: 10000) {
            nodes {
                symbol
                range {
                   start {
                       line
                       character
                   }
                   end {
                       line
                       character
                   }
                }
                roles
            }
        }
}
