// @generated by protoc-gen-connect-query v1.4.1 with parameter "target=ts"
// @generated from file codyaccess.proto (package enterpriseportal.codyaccess.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { MethodIdempotency, MethodKind } from "@bufbuild/protobuf";
import { GetCodyGatewayAccessRequest, GetCodyGatewayAccessResponse, GetCodyGatewayUsageRequest, GetCodyGatewayUsageResponse, ListCodyGatewayAccessesRequest, ListCodyGatewayAccessesResponse, UpdateCodyGatewayAccessRequest, UpdateCodyGatewayAccessResponse } from "./codyaccess_pb.js";

/**
 * Retrieve Cody Gateway access granted to an Enterprise subscription.
 *
 * @generated from rpc enterpriseportal.codyaccess.v1.CodyAccessService.GetCodyGatewayAccess
 */
export const getCodyGatewayAccess = {
  localName: "getCodyGatewayAccess",
  name: "GetCodyGatewayAccess",
  kind: MethodKind.Unary,
  I: GetCodyGatewayAccessRequest,
  O: GetCodyGatewayAccessResponse,
      idempotency: MethodIdempotency.NoSideEffects,
  service: {
    typeName: "enterpriseportal.codyaccess.v1.CodyAccessService"
  }
} as const;

/**
 * List all Cody Gateway accesses granted to any Enterprise subscription.
 *
 * @generated from rpc enterpriseportal.codyaccess.v1.CodyAccessService.ListCodyGatewayAccesses
 */
export const listCodyGatewayAccesses = {
  localName: "listCodyGatewayAccesses",
  name: "ListCodyGatewayAccesses",
  kind: MethodKind.Unary,
  I: ListCodyGatewayAccessesRequest,
  O: ListCodyGatewayAccessesResponse,
      idempotency: MethodIdempotency.NoSideEffects,
  service: {
    typeName: "enterpriseportal.codyaccess.v1.CodyAccessService"
  }
} as const;

/**
 * UpdateEnterpriseSubscription updates the Cody Gateway access granted to an
 * Enterprise subscription.
 *
 * @generated from rpc enterpriseportal.codyaccess.v1.CodyAccessService.UpdateCodyGatewayAccess
 */
export const updateCodyGatewayAccess = {
  localName: "updateCodyGatewayAccess",
  name: "UpdateCodyGatewayAccess",
  kind: MethodKind.Unary,
  I: UpdateCodyGatewayAccessRequest,
  O: UpdateCodyGatewayAccessResponse,
      idempotency: MethodIdempotency.Idempotent,
  service: {
    typeName: "enterpriseportal.codyaccess.v1.CodyAccessService"
  }
} as const;

/**
 * GetCodyGatewayUsage returns data about a subscription's recent usage of
 * Cody Gateway.
 *
 * @generated from rpc enterpriseportal.codyaccess.v1.CodyAccessService.GetCodyGatewayUsage
 */
export const getCodyGatewayUsage = {
  localName: "getCodyGatewayUsage",
  name: "GetCodyGatewayUsage",
  kind: MethodKind.Unary,
  I: GetCodyGatewayUsageRequest,
  O: GetCodyGatewayUsageResponse,
      idempotency: MethodIdempotency.NoSideEffects,
  service: {
    typeName: "enterpriseportal.codyaccess.v1.CodyAccessService"
  }
} as const;
