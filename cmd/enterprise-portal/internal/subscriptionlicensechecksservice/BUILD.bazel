load("@io_bazel_rules_go//go:def.bzl", "go_library")
load("//dev:go_mockgen.bzl", "go_mockgen")
load("//dev:go_defs.bzl", "go_test")

go_library(
    name = "subscriptionlicensechecksservice",
    srcs = [
        "v1.go",
        "v1_store.go",
    ],
    importpath = "github.com/sourcegraph/sourcegraph/cmd/enterprise-portal/internal/subscriptionlicensechecksservice",
    tags = [TAG_INFRA_CORESERVICES],
    visibility = ["//cmd/enterprise-portal:__subpackages__"],
    deps = [
        "//cmd/enterprise-portal/internal/connectutil",
        "//cmd/enterprise-portal/internal/database",
        "//cmd/enterprise-portal/internal/database/subscriptions",
        "//internal/license",
        "//internal/slack",
        "//internal/trace",
        "//lib/enterpriseportal/subscriptionlicensechecks/v1:subscriptionlicensechecks",
        "//lib/enterpriseportal/subscriptionlicensechecks/v1/v1connect",
        "//lib/enterpriseportal/subscriptions/v1:subscriptions",
        "//lib/errors",
        "//lib/pointers",
        "@com_connectrpc_connect//:connect",
        "@com_github_sourcegraph_log//:log",
        "@io_opentelemetry_go_otel//attribute",
        "@org_golang_x_crypto//ssh",
    ],
)

go_test(
    name = "subscriptionlicensechecksservice_test",
    srcs = [
        "mocks_test.go",
        "v1_test.go",
    ],
    data = glob(["testdata/**"]),
    embed = [":subscriptionlicensechecksservice"],
    tags = [TAG_INFRA_CORESERVICES],
    deps = [
        "//cmd/enterprise-portal/internal/database/subscriptions",
        "//cmd/enterprise-portal/internal/database/utctime",
        "//internal/hashutil",
        "//internal/license",
        "//internal/slack",
        "//lib/enterpriseportal/subscriptionlicensechecks/v1:subscriptionlicensechecks",
        "//lib/errors",
        "//lib/pointers",
        "@com_connectrpc_connect//:connect",
        "@com_github_derision_test_go_mockgen_v2//testutil/require",
        "@com_github_hexops_autogold_v2//:autogold",
        "@com_github_sourcegraph_log//logtest",
        "@com_github_stretchr_testify//assert",
        "@com_github_stretchr_testify//require",
    ],
)

go_mockgen(
    name = "generate_mocks",
    out = "mocks_test.go",
    manifests = [
        "//:mockgen.yaml",
        "//:mockgen.test.yaml",
        "//:mockgen.temp.yaml",
    ],
    deps = [":subscriptionlicensechecksservice"],
)
