extend type Mutation {
    validateExhaustiveSearchQuery (
        query: String!
    ): [String!]

    createExhaustiveSearch (
        query: String!
    ): ExhaustiveSearch!

    cancelExhaustiveSearch (
        id: ID!
    ): ExhaustiveSearch!

    retryExhaustiveSearch (
        id: ID!
    ): ExhaustiveSearch!

    deleteExhaustiveSearch (
        id: ID!
    ): EmptyResponse!
}

enum ExhaustiveSearchState {
    QUEUED
    PROCESSING
    ERRORED
    FAILED
    COMPLETED
}

type ExhaustiveSearch implements Node {
    id: ID!
    query: String!
    state: ExhaustiveSearchState!
    creator: User
    createdAt: DateTime!
    startedAt: DateTime
    finishedAt: DateTime
    csvURL: String
    repoStats: ExhaustiveSearchStats!
    repositories: ExhaustiveSearchRepoConnection!
}

type ExhaustiveSearchStats {
    total: Int!
    completed: Int!
    errored: Int!
    inProgress: Int!
}

type ExhaustiveSearchRepo implements Node {
    id: ID!
    state: ExhaustiveSearchState!
    revisions: [ExhaustiveSearchRevision!]!
    createdAt: DateTime!
    startedAt: DateTime
    finishedAt: DateTime
    failureMessage: String
    revisions: ExhaustiveSearchRevisionConnection!
}

type ExhaustiveSearchRevision implements Node {
    id: ID!
    state: ExhaustiveSearchState!
    revision: String!
    createdAt: DateTime!
    startedAt: DateTime
    finishedAt: DateTime
    failureMessage: String
}

type ExhaustiveSearchConnection {
    nodes: [ExhaustiveSearch!]!
    totalCount: Int!
    pageInfo: PageInfo!
}

type ExhaustiveSearchRepoConnection {
    nodes: [ExhaustiveSearchRepo!]!
    totalCount: Int!
    pageInfo: PageInfo!
}

type ExhaustiveSearchRevisionConnection {
    nodes: [ExhaustiveSearchRevision!]!
    totalCount: Int!
    pageInfo: PageInfo!
}
