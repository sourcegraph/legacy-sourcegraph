"""
Ownables are resources that can have ownership information attached.
"""
interface Ownable {
    """
    Ownership summary for this entity.
    """
    ownership(
        """
        Returns the first n ownership records from the list.
        """
        first: Int
        """
        Opaque pagination cursor.
        """
        after: String
        """
        Return only ownership for the given reasons.
        """
        reasons: [OwnershipReasonType!]
    ): OwnershipConnection!
}

extend type GitBlob implements Ownable {
    """
    Ownership summary for this file.
    """
    ownership(
        """
        Returns the first n ownership records from the list.
        """
        first: Int
        """
        Opaque pagination cursor.
        """
        after: String
        """
        Return only ownership for the given reasons.
        """
        reasons: [OwnershipReasonType!]
    ): OwnershipConnection!
}

"""
A list of ownership entries.
"""
type OwnershipConnection {
    """
    The total count of items in the connection.
    """
    totalCount: Int!
    """
    The pagination info for the connection.
    """
    pageInfo: PageInfo!
    """
    The page set of Ownership entries in this connection.
    """
    nodes: [Ownership!]!
}

"""
An owner is any entity that can own other resources.
"""
interface Owner {
    """
    A temporary field that will be removed once we have actual fields on the Owner
    interface.
    """
    ownerField: String!
}

extend type Person implements Owner {
    """
    A temporary field that will be removed once we have actual fields on the Owner
    interface.
    """
    ownerField: String!
}

extend type User implements Owner {
    """
    A temporary field that will be removed once we have actual fields on the Owner
    interface.
    """
    ownerField: String!
}

extend type Team implements Owner {
    """
    A temporary field that will be removed once we have actual fields on the Owner
    interface.
    """
    ownerField: String!
}

"""
Ownership is the collection of data points that make Sourcegraph suggest the contained
owner as owner of the Ownable this is attached to.
"""
type Ownership {
    """
    The owner this entry refers to. Can be a person or a team.
    """
    owner: Owner!
    """
    The reasons why Sourcegraph determined this entity as an owner.
    """
    reasons: [OwnershipReason!]!
}

"""
This can also be used in search using `file:has.owner(@eseliger reason:<REASON>)`,
the default is `CODEOWNERS_FILE_ENTRY` for now.
"""
enum OwnershipReasonType {
    CODEOWNERS_FILE_ENTRY
    RECENT_CONTRIBUTOR
}
"""
Union of all possible types of ownership reasons. Use the individual subtypes to
get more details on the ownership determination.
"""
union OwnershipReason = CodeownersFileEntry | RecentContributor

"""
The entity is an owner because they were mentioned on a codeowners file.
"""
type CodeownersFileEntry {
    """
    Descriptive title to display in the UI for the determination.
    """
    title: String!
    """
    More detailed description to display in the UI for the determination.
    """
    description: String!
    """
    Codeowners information can either be gathered from reading the CODEOWNERS file
    in the git repository, or ingested from an external system. This flag indicates
    which of the two it is.
    """
    ingested: Boolean!
    """
    Either GitBlob or VirtualFile. This points to the CODEOWNERS file that yielded the
    determination.
    """
    codeownersFile: File2!
    """
    The line in the CODEOWNERS file that matched for this determination.
    """
    ruleLineMatch: Int!
}

"""
The entity is an owner because they were a recent contributor to the file.
"""
type RecentContributor {
    """
    Descriptive title to display in the UI for the determination.
    """
    title: String!
    """
    More detailed description to display in the UI for the determination.
    """
    description: String!
    """
    The timeframe that was considered for this determination.
    """
    since: DateTime!
    """
    The amount of recent contributions to this file.
    """
    count: Int!
}
