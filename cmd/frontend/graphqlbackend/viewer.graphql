extend type Query {
    """
    The current user (if authenticated), or an unauthenticated visitor. On some Sourcegraph sites,
    unauthenticated visitors can access the GraphQL API and perform a limited set of actions.
    """
    viewer: Viewer!

    """
    Whether the viewer can change the visibility of a library item (such as a saved search or prompt) to
    public.
    """
    viewerCanChangeLibraryItemVisibilityToPublic: Boolean!
}

"""
A viewer is either an (authenticated) user or an (unauthenticated) visitor. It contains the subset
of fields that visitors may query, which are shared with those for users to make it easier to access
authentication-agnostic Sourcegraph features.
"""
interface Viewer {
    """
    All namespaces that the viewer is affiliated with. A user's affiliated namespaces are their own
    user account plus all organizations of which they are a member. An unauthenticated visitor has
    no affiliated namespaces (but in the future, there might be a global namespace).
    """
    affiliatedNamespaces: NamespaceConnection!
}

"""
An (unauthenticated) visitor. On some Sourcegraph sites, unauthenticated visitors can access the
GraphQL API and perform a limited set of actions.
"""
type Visitor implements Viewer {
    """
    A visitor has no affiliated namespaces, so this is currently always empty. (In the future, there
    might be a global namespace that is available to visitors).
    """
    affiliatedNamespaces: NamespaceConnection!
}

extend type User implements Viewer {
    """
    A user's affiliated namespaces are their own user account plus all organizations of which they
    are a member. (In the future, there may be more kinds of namespaces that users can be affiliated
    with.)
    """
    affiliatedNamespaces: NamespaceConnection!
}

"""
A view of a paginated list of namespaces.
"""
type NamespaceConnection {
    """
    A list of namespaces.
    """
    nodes: [Namespace!]!

    """
    The total count of namespaces in the connection.
    """
    totalCount: Int!

    """
    Pagination information.
    """
    pageInfo: PageInfo!
}
