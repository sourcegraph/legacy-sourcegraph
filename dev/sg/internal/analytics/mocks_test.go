// Code generated by go-mockgen 1.3.7; DO NOT EDIT.
//
// This file was generated by running `sg generate` (or `go-mockgen`) at the root of
// this repository. To add additional mocks to this or another package, add a new entry
// to the mockgen.yaml file in the root of this repository.

package analytics

import (
	"context"
	"sync"

	secrets "github.com/sourcegraph/sourcegraph/dev/sg/internal/secrets"
)

// MockSecretStore is a mock implementation of the secretStore interface
// (from the package
// github.com/sourcegraph/sourcegraph/dev/sg/internal/analytics) used for
// unit testing.
type MockSecretStore struct {
	// GetExternalFunc is an instance of a mock function object controlling
	// the behavior of the method GetExternal.
	GetExternalFunc *SecretStoreGetExternalFunc
}

// NewMockSecretStore creates a new mock of the secretStore interface. All
// methods return zero values for all results, unless overwritten.
func NewMockSecretStore() *MockSecretStore {
	return &MockSecretStore{
		GetExternalFunc: &SecretStoreGetExternalFunc{
			defaultHook: func(context.Context, secrets.ExternalSecret, ...secrets.FallbackFunc) (r0 string, r1 error) {
				return
			},
		},
	}
}

// NewStrictMockSecretStore creates a new mock of the secretStore interface.
// All methods panic on invocation, unless overwritten.
func NewStrictMockSecretStore() *MockSecretStore {
	return &MockSecretStore{
		GetExternalFunc: &SecretStoreGetExternalFunc{
			defaultHook: func(context.Context, secrets.ExternalSecret, ...secrets.FallbackFunc) (string, error) {
				panic("unexpected invocation of MockSecretStore.GetExternal")
			},
		},
	}
}

// surrogateMockSecretStore is a copy of the secretStore interface (from the
// package github.com/sourcegraph/sourcegraph/dev/sg/internal/analytics). It
// is redefined here as it is unexported in the source package.
type surrogateMockSecretStore interface {
	GetExternal(context.Context, secrets.ExternalSecret, ...secrets.FallbackFunc) (string, error)
}

// NewMockSecretStoreFrom creates a new mock of the MockSecretStore
// interface. All methods delegate to the given implementation, unless
// overwritten.
func NewMockSecretStoreFrom(i surrogateMockSecretStore) *MockSecretStore {
	return &MockSecretStore{
		GetExternalFunc: &SecretStoreGetExternalFunc{
			defaultHook: i.GetExternal,
		},
	}
}

// SecretStoreGetExternalFunc describes the behavior when the GetExternal
// method of the parent MockSecretStore instance is invoked.
type SecretStoreGetExternalFunc struct {
	defaultHook func(context.Context, secrets.ExternalSecret, ...secrets.FallbackFunc) (string, error)
	hooks       []func(context.Context, secrets.ExternalSecret, ...secrets.FallbackFunc) (string, error)
	history     []SecretStoreGetExternalFuncCall
	mutex       sync.Mutex
}

// GetExternal delegates to the next hook function in the queue and stores
// the parameter and result values of this invocation.
func (m *MockSecretStore) GetExternal(v0 context.Context, v1 secrets.ExternalSecret, v2 ...secrets.FallbackFunc) (string, error) {
	r0, r1 := m.GetExternalFunc.nextHook()(v0, v1, v2...)
	m.GetExternalFunc.appendCall(SecretStoreGetExternalFuncCall{v0, v1, v2, r0, r1})
	return r0, r1
}

// SetDefaultHook sets function that is called when the GetExternal method
// of the parent MockSecretStore instance is invoked and the hook queue is
// empty.
func (f *SecretStoreGetExternalFunc) SetDefaultHook(hook func(context.Context, secrets.ExternalSecret, ...secrets.FallbackFunc) (string, error)) {
	f.defaultHook = hook
}

// PushHook adds a function to the end of hook queue. Each invocation of the
// GetExternal method of the parent MockSecretStore instance invokes the
// hook at the front of the queue and discards it. After the queue is empty,
// the default hook function is invoked for any future action.
func (f *SecretStoreGetExternalFunc) PushHook(hook func(context.Context, secrets.ExternalSecret, ...secrets.FallbackFunc) (string, error)) {
	f.mutex.Lock()
	f.hooks = append(f.hooks, hook)
	f.mutex.Unlock()
}

// SetDefaultReturn calls SetDefaultHook with a function that returns the
// given values.
func (f *SecretStoreGetExternalFunc) SetDefaultReturn(r0 string, r1 error) {
	f.SetDefaultHook(func(context.Context, secrets.ExternalSecret, ...secrets.FallbackFunc) (string, error) {
		return r0, r1
	})
}

// PushReturn calls PushHook with a function that returns the given values.
func (f *SecretStoreGetExternalFunc) PushReturn(r0 string, r1 error) {
	f.PushHook(func(context.Context, secrets.ExternalSecret, ...secrets.FallbackFunc) (string, error) {
		return r0, r1
	})
}

func (f *SecretStoreGetExternalFunc) nextHook() func(context.Context, secrets.ExternalSecret, ...secrets.FallbackFunc) (string, error) {
	f.mutex.Lock()
	defer f.mutex.Unlock()

	if len(f.hooks) == 0 {
		return f.defaultHook
	}

	hook := f.hooks[0]
	f.hooks = f.hooks[1:]
	return hook
}

func (f *SecretStoreGetExternalFunc) appendCall(r0 SecretStoreGetExternalFuncCall) {
	f.mutex.Lock()
	f.history = append(f.history, r0)
	f.mutex.Unlock()
}

// History returns a sequence of SecretStoreGetExternalFuncCall objects
// describing the invocations of this function.
func (f *SecretStoreGetExternalFunc) History() []SecretStoreGetExternalFuncCall {
	f.mutex.Lock()
	history := make([]SecretStoreGetExternalFuncCall, len(f.history))
	copy(history, f.history)
	f.mutex.Unlock()

	return history
}

// SecretStoreGetExternalFuncCall is an object that describes an invocation
// of method GetExternal on an instance of MockSecretStore.
type SecretStoreGetExternalFuncCall struct {
	// Arg0 is the value of the 1st argument passed to this method
	// invocation.
	Arg0 context.Context
	// Arg1 is the value of the 2nd argument passed to this method
	// invocation.
	Arg1 secrets.ExternalSecret
	// Arg2 is a slice containing the values of the variadic arguments
	// passed to this method invocation.
	Arg2 []secrets.FallbackFunc
	// Result0 is the value of the 1st result returned from this method
	// invocation.
	Result0 string
	// Result1 is the value of the 2nd result returned from this method
	// invocation.
	Result1 error
}

// Args returns an interface slice containing the arguments of this
// invocation. The variadic slice argument is flattened in this array such
// that one positional argument and three variadic arguments would result in
// a slice of four, not two.
func (c SecretStoreGetExternalFuncCall) Args() []interface{} {
	trailing := []interface{}{}
	for _, val := range c.Arg2 {
		trailing = append(trailing, val)
	}

	return append([]interface{}{c.Arg0, c.Arg1}, trailing...)
}

// Results returns an interface slice containing the results of this
// invocation.
func (c SecretStoreGetExternalFuncCall) Results() []interface{} {
	return []interface{}{c.Result0, c.Result1}
}
