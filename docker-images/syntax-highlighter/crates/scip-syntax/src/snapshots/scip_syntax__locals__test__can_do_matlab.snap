---
source: crates/scip-syntax/src/locals.rs
expression: dumped
---
  a = 1;
//^ definition local 1
  
  function myFunc()
//         ^^^^^^ definition local 2
      e = 5;
//    ^ definition local 3
      f = 6;
//    ^ definition local 4
  end
  
  function myNestedFunc()
//         ^^^^^^^^^^^^ definition local 5
      g = 7;
//    ^ definition local 6
      
      function nestedChildFunc()
//             ^^^^^^^^^^^^^^^ definition local 7
          h = 8;
//        ^ definition local 8
      end
  end
  
  global i j
//       ^ definition local 9
//         ^ definition local 10
  i = 9;
//^ definition local 11
  j = 10;
//^ definition local 12
  
  function myPersistFunc()
//         ^^^^^^^^^^^^^ definition local 13
      persistent k 
//               ^ definition local 14
      if isempty(k)
//               ^ reference local 14
          k = 11;
//        ^ definition local 15
      end
  end
  
  function myScopeFunc()
//         ^^^^^^^^^^^ definition local 16
      m = 12;
//    ^ definition local 17
      
      n = 13;
//    ^ definition local 18
      global n
//           ^ definition local 19
      
      o = 14;
//    ^ definition local 20
      persistent o
//               ^ definition local 21
  end
  
  function [a, b] = myFunction()
//          ^ definition local 22
//             ^ definition local 23
//                  ^^^^^^^^^^ definition local 24
      a = 1;
//    ^ definition local 25
      b = [2, 3];
//    ^ definition local 26
  end
  
  classdef MyClass
//         ^^^^^^^ definition local 27
      properties
          Prop1
      end
      
      methods
          function obj = MyClass(prop1)
//                 ^^^ definition local 28
//                       ^^^^^^^ definition local 29
//                               ^^^^^ definition local 30
              obj.Prop1 = prop1;
//            ^^^ reference local 28
//                        ^^^^^ reference local 30
          end
          
          function result = method1(obj)
//                 ^^^^^^ definition local 31
//                          ^^^^^^^ definition local 32
//                                  ^^^ definition local 33
              result = obj.Prop1;
//            ^^^^^^ definition local 34
//                     ^^^ reference local 33
          end
      end
  end
  
  myObject = MyClass(5);
//^^^^^^^^ definition local 35
//           ^^^^^^^ reference local 27
  result = myObject.method1();
//^^^^^^ definition local 36
//         ^^^^^^^^ reference local 35
//                  ^^^^^^^ reference local 32
  
  addTwoNumbers = @(x, y) x + y;
//^^^^^^^^^^^^^ definition local 37
//                  ^ definition local 38
//                     ^ definition local 39
//                        ^ reference local 38
//                            ^ reference local 39
  
  % TODO handle clear
  % See https://github.com/sourcegraph/sourcegraph/issues/57399
  
  slay = 12 % definition is here
//^^^^ definition local 40
  clear slay
  slay = 10 % and now it's here!
//^^^^ definition local 41
  
  pog1 = 10
//^^^^ definition local 42
  pog1 = 20
//^^^^ definition local 43
  
  function f()
//         ^ definition local 44
    if false
      pog2 = 1;
//    ^^^^ definition local 45
    else
      % TODO: this should also be marked as a definition
      pog2 = 2;
//    ^^^^ definition local 46
    end
    disp(pog2);
//       ^^^^ reference local 45
  end

