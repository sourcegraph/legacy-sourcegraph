---
source: crates/syntax-analysis/src/locals.rs
expression: scope_tree
---
scope global (0, 0)-(121, 0)
  ref java.lang (2, 7)-(2, 16)
  ref lang (2, 12)-(2, 16)
  ref AutoCloseable (2, 17)-(2, 30)
  ref java (3, 7)-(3, 11)
  ref util (3, 12)-(3, 16)
  ref java.util (4, 7)-(4, 16)
  ref util (4, 12)-(4, 16)
  ref stream (4, 17)-(4, 23)
  scope scope (6, 0)-(120, 1)
    ref Deprecated (6, 1)-(6, 11)
    def Container (7, 20)-(7, 29)
    ref AutoCloseable (7, 42)-(7, 55)
    ref String (9, 7)-(9, 13)
    scope scope (11, 1)-(13, 2)
      ref Locals (11, 8)-(11, 14)
      ref String (11, 15)-(11, 21)
      def chars (11, 22)-(11, 27)
      ref chars (12, 7)-(12, 12)
      ref chars (12, 15)-(12, 20)
    scope scope (15, 1)-(17, 2)
      ref Locals (15, 8)-(15, 14)
      ref String (15, 22)-(15, 28)
      def chars (15, 29)-(15, 34)
      def num (15, 40)-(15, 43)
      ref Locals (15, 45)-(15, 51)
      def text (15, 52)-(15, 56)
      scope scope (15, 58)-(17, 2)
        ref Locals (16, 13)-(16, 19)
        ref chars (16, 25)-(16, 30)
        ref chars (16, 33)-(16, 38)
        ref text (16, 41)-(16, 45)
        ref getChars (16, 46)-(16, 54)
    scope scope (19, 1)-(21, 2)
      ref String (19, 8)-(19, 14)
      scope scope (19, 26)-(21, 2)
        ref chars (20, 14)-(20, 19)
    scope scope (23, 1)-(24, 2)
      scope scope (23, 21)-(24, 2)
    scope scope (26, 1)-(28, 2)
      scope scope (26, 29)-(28, 2)
        def x (27, 6)-(27, 7)
        ref Locals (27, 14)-(27, 20)
        ref Integer (27, 21)-(27, 28)
    scope scope (30, 1)-(31, 2)
      ref String (30, 22)-(30, 28)
      ref String (30, 35)-(30, 41)
    scope scope (33, 1)-(39, 2)
      def N (33, 22)-(33, 23)
      ref Number (33, 32)-(33, 38)
      ref N (34, 8)-(34, 9)
      scope scope (36, 2)-(38, 3)
        ref Binary (36, 9)-(36, 15)
        ref N (36, 16)-(36, 17)
        def value (36, 18)-(36, 23)
        ref val (37, 8)-(37, 11)
        ref value (37, 14)-(37, 19)
    scope scope (41, 1)-(45, 2)
      ref Object (41, 20)-(41, 26)
      def person (41, 27)-(41, 33)
      scope scope (41, 35)-(45, 2)
        ref person (42, 6)-(42, 12)
        ref Person (42, 24)-(42, 30)
        ref String (42, 31)-(42, 37)
        def x (42, 38)-(42, 39)
        ref String (42, 41)-(42, 47)
        def y (42, 48)-(42, 49)
        scope scope (42, 52)-(44, 5)
          ref System (43, 3)-(43, 9)
          ref out (43, 10)-(43, 13)
          ref println (43, 14)-(43, 21)
          ref x (43, 22)-(43, 23)
          ref y (43, 32)-(43, 33)
    scope scope (47, 1)-(63, 2)
      scope scope (52, 2)-(54, 3)
        ref Flags (52, 2)-(52, 7)
      scope scope (56, 2)-(58, 3)
        ref Flags (56, 2)-(56, 7)
        def bits (56, 12)-(56, 16)
        ref bits (57, 8)-(57, 12)
        ref bits (57, 15)-(57, 19)
      scope scope (60, 2)-(62, 3)
        ref Flags (60, 36)-(60, 41)
        def bits (60, 42)-(60, 46)
        scope scope (60, 48)-(62, 3)
          ref bits (61, 11)-(61, 15)
          ref bits (61, 16)-(61, 20)
          ref Flags (61, 23)-(61, 28)
          ref NODE_TEXT (61, 29)-(61, 38)
          ref bits (61, 39)-(61, 43)
    scope scope (65, 1)-(67, 2)
      ref String (65, 11)-(65, 17)
      scope scope (65, 39)-(67, 2)
        ref getChars (66, 19)-(66, 27)
    scope scope (69, 1)-(71, 2)
      def T (69, 9)-(69, 10)
      ref Container (69, 19)-(69, 28)
      ref List (69, 30)-(69, 34)
      ref T (69, 35)-(69, 36)
      ref T (69, 54)-(69, 55)
      def a (69, 58)-(69, 59)
      scope scope (69, 61)-(71, 2)
        ref Arrays (70, 9)-(70, 15)
        ref stream (70, 16)-(70, 22)
        ref a (70, 23)-(70, 24)
        ref collect (70, 26)-(70, 33)
        ref Collectors (70, 34)-(70, 44)
        ref toList (70, 45)-(70, 51)
    scope scope (75, 1)-(77, 2)
      ref List (75, 23)-(75, 27)
      ref Container (75, 38)-(75, 47)
      def a (75, 49)-(75, 50)
      scope scope (75, 52)-(77, 2)
        ref System (76, 2)-(76, 8)
        ref out (76, 9)-(76, 12)
        ref println (76, 13)-(76, 20)
        ref a (76, 21)-(76, 22)
    scope scope (79, 1)-(84, 2)
      def r (79, 23)-(79, 24)
      scope scope (79, 26)-(84, 2)
        scope scope (80, 2)-(82, 3)
          def i (80, 11)-(80, 12)
          ref i (80, 18)-(80, 19)
          ref r (80, 22)-(80, 23)
          ref i (80, 25)-(80, 26)
          scope scope (80, 30)-(82, 3)
            ref System (81, 3)-(81, 9)
            ref out (81, 10)-(81, 13)
            ref println (81, 14)-(81, 21)
            ref i (81, 22)-(81, 23)
        ref System (83, 2)-(83, 8)
        ref out (83, 9)-(83, 12)
        ref println (83, 13)-(83, 20)
        ref r (83, 21)-(83, 22)
    scope scope (86, 1)-(88, 2)
      scope scope (87, 2)-(87, 29)
        ref Hello (87, 20)-(87, 25)
        def t (87, 26)-(87, 27)
    scope scope (90, 1)-(94, 2)
      scope scope (91, 2)-(93, 3)
        ref Hello2 (91, 9)-(91, 15)
        def t (91, 20)-(91, 21)
        def newT (92, 7)-(92, 11)
        ref t (92, 14)-(92, 15)
    scope scope (96, 1)-(103, 2)
      def num (96, 24)-(96, 27)
      scope scope (96, 29)-(103, 2)
        scope scope (97, 2)-(102, 3)
          def num2 (98, 7)-(98, 11)
          scope scope (99, 3)-(101, 4)
            def num3 (100, 8)-(100, 12)
    scope scope (105, 1)-(119, 2)
      scope scope (105, 20)-(119, 2)
        ref ArrayList (106, 2)-(106, 11)
        ref Integer (106, 12)-(106, 19)
        def numbers (106, 21)-(106, 28)
        ref ArrayList (106, 35)-(106, 44)
        ref Integer (106, 45)-(106, 52)
        ref numbers (107, 2)-(107, 9)
        ref add (107, 10)-(107, 13)
        ref numbers (108, 2)-(108, 9)
        ref add (108, 10)-(108, 13)
        ref numbers (109, 2)-(109, 9)
        ref add (109, 10)-(109, 13)
        ref numbers (110, 2)-(110, 9)
        ref add (110, 10)-(110, 13)
        ref numbers (111, 2)-(111, 9)
        ref forEach (111, 10)-(111, 17)
        scope scope (111, 18)-(113, 3)
          def n (111, 19)-(111, 20)
          scope scope (111, 25)-(113, 3)
            ref System (112, 3)-(112, 9)
            ref out (112, 10)-(112, 13)
            ref println (112, 14)-(112, 21)
            ref n (112, 22)-(112, 23)
        scope scope (115, 2)-(117, 3)
          ref Integer (115, 7)-(115, 14)
          def num (115, 15)-(115, 18)
          ref numbers (115, 21)-(115, 28)
          scope scope (115, 30)-(117, 3)
            ref System (116, 3)-(116, 9)
            ref out (116, 10)-(116, 13)
            ref println (116, 14)-(116, 21)
            ref num (116, 22)-(116, 25)

