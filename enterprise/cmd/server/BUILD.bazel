load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
load("@rules_oci//oci:defs.bzl", "oci_image", "oci_push", "oci_tarball")
load("@rules_pkg//:pkg.bzl", "pkg_tar")
load("@container_structure_test//:defs.bzl", "container_structure_test")
load("//cmd/server:macro.bzl", "container_dependencies", "dependencies_tars")
load("//:stamp_tags.bzl", "stamp_tags")

go_library(
    name = "server_lib",
    srcs = ["main.go"],
    importpath = "github.com/sourcegraph/sourcegraph/enterprise/cmd/server",
    visibility = ["//visibility:private"],
    deps = [
        "//cmd/server/shared",
        "//internal/sanitycheck",
        "//ui/assets/enterprise",
    ],
)

go_binary(
    name = "server",
    embed = [":server_lib"],
    visibility = ["//visibility:public"],
)

pkg_tar(
    name = "tar_server",
    srcs = [":server"],
)

genrule(
    name = "nginx_tmp_folder",
    outs = [".keep_tmp"],
    cmd = "echo keep > $@",
)

genrule(
    name = "nginx_run_folder",
    outs = [".keep_run"],
    cmd = "echo keep > $@",
)

pkg_tar(
    name = "static_config_tar",
    srcs = [
        ":nginx_run_folder",
        ":nginx_tmp_folder",
    ],
    remap_paths = {
        "/.keep_tmp": "/var/lib/nginx/tmp/.keep",
        "/.keep_run": "/var/run/.keep",
    },
)

pkg_tar(
    name = "tar_postgres_exporter_config",
    srcs = ["//cmd/server:postgres_exporter.yaml"],
)

pkg_tar(
    name = "tar_monitoring_config",
    srcs = [
        "//dev/prometheus:prometheus_targets_linux",
        "//docker-images/grafana/config",
        "//docker-images/prometheus:startup_scripts",
        "//docker-images/prometheus/config:base_config",
        "//monitoring:generate_config",
    ],
    remap_paths = {
        "monitoring/outputs/docs": "/sg_config_docs",
        "monitoring/outputs/prometheus": "/sg_config_prometheus",
        "monitoring/outputs/grafana": "/sg_config_grafana/provisioning/dashboards/sourcegraph",
        "docker-images/grafana/config": "/sg_config_grafana",
        "docker-images/prometheus/config": "/sg_config_prometheus",
        "docker-images/prometheus": "",
        "dev/prometheus/linux": "/sg_prometheus_add_ons",
    },
    strip_prefix = ".",
)

DEPS = [
    "//cmd/github-proxy",
    "//cmd/searcher",
    "//enterprise/cmd/frontend",
    "//enterprise/cmd/gitserver",
    "//enterprise/cmd/migrator",
    "//enterprise/cmd/precise-code-intel-worker",
    "//enterprise/cmd/repo-updater",
    "//enterprise/cmd/symbols",
    "//enterprise/cmd/worker",
    "//docker-images/prometheus/cmd/prom-wrapper",
    "//docker-images/syntax-highlighter:syntect_server",
]

ZOEKT_DEPS = [
    "@com_github_sourcegraph_zoekt//cmd/zoekt-archive-index",
    "@com_github_sourcegraph_zoekt//cmd/zoekt-git-index",
    "@com_github_sourcegraph_zoekt//cmd/zoekt-sourcegraph-indexserver",
    "@com_github_sourcegraph_zoekt//cmd/zoekt-webserver",
]

# Declares rules for pkg_tar for each dep in DEPS
container_dependencies(DEPS)

container_dependencies(ZOEKT_DEPS)

# Tip: to view exactly what gets built here, you can run:
#   bazel cquery '//cmd/server:image' --output build
oci_image(
    name = "image",
    base = "@wolfi_server_base",
    entrypoint = ["/server"],
    tars = [
        ":tar_server",
        ":static_config_tar",
        "tar_postgres_exporter_config",
        ":tar_monitoring_config",
    ] + dependencies_tars(DEPS) + dependencies_tars(ZOEKT_DEPS),
    workdir = "/",
)

oci_tarball(
    name = "image_tarball",
    image = ":image",
    repo_tags = ["server:candidate"],
    visibility = ["//testing:__pkg__"],
)

container_structure_test(
    name = "image_test",
    timeout = "short",
    configs = ["image_test.yaml"],
    driver = "docker",
    image = ":image",
    tags = ["requires-network"],
)

stamp_tags(
    name = "tags",
    remote_tags = ["""($stamp.STABLE_VERSION // "0.0.0")"""],
)

oci_push(
    name = "candidate_push",
    image = ":image",
    remote_tags = ":tags",
    repository = "us.gcr.io/sourcegraph-dev/server",
)
