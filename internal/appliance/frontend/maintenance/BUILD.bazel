load("@aspect_rules_js//js:defs.bzl", "js_library", "js_run_binary", "js_run_devserver")
load("@aspect_rules_ts//ts:defs.bzl", "ts_config")
load("@npm//:defs.bzl", "npm_link_all_packages")
load("@npm//internal/appliance/frontend/maintenance:tsconfig-to-swcconfig/package_json.bzl", tsconfig_to_swcconfig = "bin")
load("@npm//internal/appliance/frontend/maintenance:vite/package_json.bzl", vite_bin = "bin")
load("@rules_pkg//:pkg.bzl", "pkg_tar")
load("//wolfi-images:defs.bzl", "wolfi_base")
load("@container_structure_test//:defs.bzl", "container_structure_test")

npm_link_all_packages(
    name = "node_modules",
)

RUNTIME_DEPS = [
    "assets/cody.svg",
    "assets/sourcegraph-reverse-logo.png",
    "assets/sourcegraph.png",
    "index.html",
    "src/App.css",
    "src/Frame.tsx",
    "src/Home.tsx",
    "src/Install.tsx",
    "src/Login.tsx",
    "src/Maintenance.tsx",
    "src/OperatorStatus.tsx",
    "src/Progress.tsx",
    "src/Theme.tsx",
    "src/WaitForAdmin.tsx",
    "src/api.ts",
    "src/state.ts",
    "src/index.css",
    "src/main.tsx",
    "src/reportWebVitals.ts",
    ":node_modules/@emotion/react",
    ":node_modules/@emotion/styled",
    ":node_modules/@mui/icons-material",
    ":node_modules/@mui/material",
    ":node_modules/classnames",
    ":node_modules/react",
    ":node_modules/react-dom",
    ":node_modules/react-router-dom",
    ":node_modules/web-vitals",
    ":node_modules/vite",
    ":node_modules/std-env",
    ":node_modules/rollup",
]

DEV_DEPS = [
    "vite.config.mts",
    ":node_modules/@vitejs/plugin-react",
    ":node_modules/vitest",
]

ts_config(
    name = "tsconfig",
    src = "tsconfig.json",
    visibility = ["//visibility:public"],
)

tsconfig_to_swcconfig.t2s(
    name = "write_swcrc",
    srcs = ["tsconfig.json"],
    args = [
        "--filename",
        "$(location tsconfig.json)",
    ],
    stdout = ".swcrc",
    visibility = ["//maintenance:__subpackages__"],
)

js_library(
    name = "package_json",
    srcs = ["package.json"],
    visibility = ["//visibility:public"],
)

js_library(
    name = "vite.config",
    srcs = ["vite.config.mts"],
    data = [
        ":node_modules/@vitejs/plugin-react",
        ":node_modules/vitest",
    ],
    visibility = ["//maintenance:__subpackages__"],
)

vite_bin.vite_binary(
    name = "vite",
    chdir = package_name(),
    data = ["vite.config"],
)

# Fast developer round-trip under ibazel
js_run_devserver(
    name = "start",
    args = ["."],
    data = RUNTIME_DEPS + DEV_DEPS,
    tool = ":vite",
)

# Create production release artifacts
js_run_binary(
    name = "build",
    srcs = RUNTIME_DEPS,
    args = ["build"],
    mnemonic = "ViteBuild",
    out_dirs = ["dist"],
    tool = ":vite",
    visibility = ["//docker-images/appliance-frontend:__pkg__"],
)

# Hosts the production-bundled application in a web server
vite_bin.vite_binary(
    name = "preview",
    args = ["preview"],
    chdir = package_name(),
    data = [":build"],
)

pkg_tar(
    name = "tar_frontend",
    srcs = [":build"],
    package_dir = "maintenance",
    strip_prefix = "dist",
    visibility = ["//docker-images/appliance-frontend:__pkg__"],
)

container_structure_test(
    name = "image_test",
    timeout = "short",
    configs = ["image_test.yaml"],
    driver = "docker",
    image = "//docker-images/appliance-frontend:image",
    tags = [
        "exclusive",
        "requires-network",
        TAG_INFRA_DEVINFRA,
    ],
)

filegroup(
    name = "config",
    srcs = ["maintenance.conf.template"],
)

pkg_tar(
    name = "tar_config",
    srcs = [":config"],
    package_dir = "/etc/nginx/templates",
    visibility = ["//docker-images/appliance-frontend:__pkg__"],
)

wolfi_base(target = "appliance-frontend")
