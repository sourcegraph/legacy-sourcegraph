resources:
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        appliance.sourcegraph.com/configHash: 2b72058f008a684f7fa052f8ad33d0226af4cfb7973242c9103d6d1900da355e
      creationTimestamp: "2024-04-19T00:00:00Z"
      generation: 1
      labels:
        app.kubernetes.io/component: blobstore
        app.kubernetes.io/name: sourcegraph
        app.kubernetes.io/version: 5.3.9104
        deploy: sourcegraph
      name: blobstore
      namespace: NORMALIZED_FOR_TESTING
      ownerReferences:
        - apiVersion: v1
          blockOwnerDeletion: true
          controller: true
          kind: ConfigMap
          name: sg
          uid: NORMALIZED_FOR_TESTING
      resourceVersion: NORMALIZED_FOR_TESTING
      uid: NORMALIZED_FOR_TESTING
    spec:
      minReadySeconds: 10
      progressDeadlineSeconds: 600
      replicas: 1
      revisionHistoryLimit: 10
      selector:
        matchLabels:
          app: blobstore
      strategy:
        rollingUpdate:
          maxSurge: 25%
          maxUnavailable: 25%
        type: RollingUpdate
      template:
        metadata:
          annotations:
            kubectl.kubernetes.io/default-container: blobstore
          creationTimestamp: null
          labels:
            app: blobstore
            deploy: sourcegraph
          name: blobstore
        spec:
          containers:
            - image: index.docker.io/sourcegraph/blobstore:5.3.9104
              imagePullPolicy: IfNotPresent
              name: blobstore
              ports:
                - containerPort: 9000
                  name: blobstore
                  protocol: TCP
              resources:
                limits:
                  cpu: "1"
                  memory: 500M
                requests:
                  cpu: "1"
                  memory: 500M
              securityContext:
                allowPrivilegeEscalation: false
                readOnlyRootFilesystem: true
                runAsGroup: 101
                runAsUser: 100
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: FallbackToLogsOnError
              volumeMounts:
                - mountPath: /blobstore
                  name: blobstore
                - mountPath: /data
                  name: blobstore-data
          dnsPolicy: ClusterFirst
          restartPolicy: Always
          schedulerName: default-scheduler
          securityContext:
            fsGroup: 101
            fsGroupChangePolicy: OnRootMismatch
            runAsGroup: 101
            runAsUser: 100
          terminationGracePeriodSeconds: 30
          volumes:
            - emptyDir: {}
              name: blobstore
            - name: blobstore-data
              persistentVolumeClaim:
                claimName: blobstore
    status: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        appliance.sourcegraph.com/configHash: 24debcd57654ec9bad2bc69454c6c9eb407fa072782198b3410f88874cd2eb25
      creationTimestamp: "2024-04-19T00:00:00Z"
      generation: 1
      labels:
        app.kubernetes.io/component: worker
        app.kubernetes.io/name: sourcegraph
        app.kubernetes.io/version: 5.3.9104
        deploy: sourcegraph
      name: worker
      namespace: NORMALIZED_FOR_TESTING
      ownerReferences:
        - apiVersion: v1
          blockOwnerDeletion: true
          controller: true
          kind: ConfigMap
          name: sg
          uid: NORMALIZED_FOR_TESTING
      resourceVersion: NORMALIZED_FOR_TESTING
      uid: NORMALIZED_FOR_TESTING
    spec:
      minReadySeconds: 10
      progressDeadlineSeconds: 600
      replicas: 1
      revisionHistoryLimit: 10
      selector:
        matchLabels:
          app: worker
      strategy:
        rollingUpdate:
          maxSurge: 1
          maxUnavailable: 1
        type: RollingUpdate
      template:
        metadata:
          annotations:
            kubectl.kubernetes.io/default-container: worker
          creationTimestamp: null
          labels:
            app: worker
            deploy: sourcegraph
          name: worker
        spec:
          containers:
            - env:
                - name: REDIS_CACHE_ENDPOINT
                  valueFrom:
                    secretKeyRef:
                      key: endpoint
                      name: redis-cache
                - name: REDIS_STORE_ENDPOINT
                  valueFrom:
                    secretKeyRef:
                      key: endpoint
                      name: redis-store
                - name: PRECISE_CODE_INTEL_UPLOAD_BACKEND
                  value: blobstore
                - name: PRECISE_CODE_INTEL_UPLOAD_AWS_ENDPOINT
                  value: http://blobstore:9000
                - name: POD_NAME
                  valueFrom:
                    fieldRef:
                      apiVersion: v1
                      fieldPath: metadata.name
                - name: OTEL_AGENT_HOST
                  valueFrom:
                    fieldRef:
                      apiVersion: v1
                      fieldPath: status.hostIP
                - name: OTEL_EXPORTER_OTLP_ENDPOINT
                  value: http://$(OTEL_AGENT_HOST):4317
              image: index.docker.io/sourcegraph/worker:5.3.9104
              imagePullPolicy: IfNotPresent
              livenessProbe:
                failureThreshold: 3
                httpGet:
                  path: /healthz
                  port: debug
                  scheme: HTTP
                initialDelaySeconds: 60
                periodSeconds: 10
                successThreshold: 1
                timeoutSeconds: 5
              name: worker
              ports:
                - containerPort: 3189
                  name: http
                  protocol: TCP
                - containerPort: 6060
                  name: debug
                  protocol: TCP
                - containerPort: 6996
                  name: prom
                  protocol: TCP
              readinessProbe:
                failureThreshold: 3
                httpGet:
                  path: /ready
                  port: debug
                  scheme: HTTP
                periodSeconds: 5
                successThreshold: 1
                timeoutSeconds: 5
              resources:
                limits:
                  cpu: "2"
                  memory: 4G
                requests:
                  cpu: 500m
                  memory: 2G
              securityContext:
                allowPrivilegeEscalation: false
                readOnlyRootFilesystem: true
                runAsGroup: 101
                runAsUser: 100
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: FallbackToLogsOnError
          dnsPolicy: ClusterFirst
          restartPolicy: Always
          schedulerName: default-scheduler
          securityContext:
            fsGroup: 101
            fsGroupChangePolicy: OnRootMismatch
            runAsGroup: 101
            runAsUser: 100
          terminationGracePeriodSeconds: 30
    status: {}
  - apiVersion: apps/v1
    kind: StatefulSet
    metadata:
      annotations:
        appliance.sourcegraph.com/configHash: c7ada10d28d26c809f8b7e71aabb5a65420c3c2f306a364d3b9b966189d84a05
      creationTimestamp: "2024-04-19T00:00:00Z"
      generation: 1
      labels:
        app.kubernetes.io/component: grafana
        app.kubernetes.io/name: sourcegraph
        app.kubernetes.io/version: 5.3.9104
        deploy: sourcegraph
      name: grafana
      namespace: NORMALIZED_FOR_TESTING
      ownerReferences:
        - apiVersion: v1
          blockOwnerDeletion: true
          controller: true
          kind: ConfigMap
          name: sg
          uid: NORMALIZED_FOR_TESTING
      resourceVersion: NORMALIZED_FOR_TESTING
      uid: NORMALIZED_FOR_TESTING
    spec:
      minReadySeconds: 10
      persistentVolumeClaimRetentionPolicy:
        whenDeleted: Retain
        whenScaled: Retain
      podManagementPolicy: OrderedReady
      replicas: 1
      revisionHistoryLimit: 10
      selector:
        matchLabels:
          app: grafana
      serviceName: grafana
      template:
        metadata:
          annotations:
            kubectl.kubernetes.io/default-container: grafana
          creationTimestamp: null
          labels:
            app: grafana
            deploy: sourcegraph
          name: grafana
        spec:
          containers:
            - image: index.docker.io/sourcegraph/grafana:5.3.9104
              imagePullPolicy: IfNotPresent
              name: grafana
              ports:
                - containerPort: 3370
                  name: http
                  protocol: TCP
              resources:
                limits:
                  cpu: "1"
                  memory: 512Mi
                requests:
                  cpu: 100m
                  memory: 512Mi
              securityContext:
                allowPrivilegeEscalation: false
                readOnlyRootFilesystem: true
                runAsGroup: 472
                runAsUser: 472
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: FallbackToLogsOnError
              volumeMounts:
                - mountPath: /var/lib/grafana
                  name: grafana-data
                - mountPath: /sg_config_grafana/provisioning/datasources
                  name: config
          dnsPolicy: ClusterFirst
          restartPolicy: Always
          schedulerName: default-scheduler
          securityContext:
            fsGroup: 472
            fsGroupChangePolicy: OnRootMismatch
            runAsGroup: 472
            runAsUser: 472
          serviceAccount: grafana
          serviceAccountName: grafana
          terminationGracePeriodSeconds: 30
          volumes:
            - configMap:
                defaultMode: 511
                name: grafana
              name: config
      updateStrategy:
        type: RollingUpdate
      volumeClaimTemplates:
        - apiVersion: v1
          kind: PersistentVolumeClaim
          metadata:
            creationTimestamp: null
            labels:
              deploy: sourcegraph
            name: grafana-data
            namespace: NORMALIZED_FOR_TESTING
          spec:
            accessModes:
              - ReadWriteOnce
            resources:
              requests:
                storage: 2Gi
            volumeMode: Filesystem
          status:
            phase: Pending
    status:
      availableReplicas: 0
      replicas: 0
  - apiVersion: v1
    data:
      datasources.yml: |
        apiVersion: 1

        datasources:
          - name: Prometheus
            type: prometheus
            access: proxy
            url: http://prometheus:30090
            isDefault: true
            editable: false
          - name: Jaeger
            type: Jaeger
            access: proxy
            url: http://jaeger-query:16686/-/debug/jaeger
      extra_rules.yml: ""
    immutable: false
    kind: ConfigMap
    metadata:
      annotations:
        appliance.sourcegraph.com/configHash: c7ada10d28d26c809f8b7e71aabb5a65420c3c2f306a364d3b9b966189d84a05
      creationTimestamp: "2024-04-19T00:00:00Z"
      labels:
        deploy: sourcegraph
      name: grafana
      namespace: NORMALIZED_FOR_TESTING
      ownerReferences:
        - apiVersion: v1
          blockOwnerDeletion: true
          controller: true
          kind: ConfigMap
          name: sg
          uid: NORMALIZED_FOR_TESTING
      resourceVersion: NORMALIZED_FOR_TESTING
      uid: NORMALIZED_FOR_TESTING
  - apiVersion: v1
    data:
      spec: |
        spec:
          requestedVersion: "5.3.9104"

          blobstore: {}

          codeInsights:
            disabled: true

          codeIntel:
            disabled: true

          frontend:
            disabled: true

          gitServer:
            disabled: true

          indexedSearch:
            disabled: true

          openTelemetry:
            disabled: true

          pgsql:
            disabled: true

          postgresExporter:
            disabled: true

          preciseCodeIntel:
            disabled: true

          redisCache:
            disabled: true

          redisStore:
            disabled: true

          repoUpdater:
            disabled: true

          searcher:
            disabled: true

          symbols:
            disabled: true

          syntectServer:
            disabled: true

          worker: {}

          prometheus:
            disabled: true
    kind: ConfigMap
    metadata:
      annotations:
        appliance.sourcegraph.com/currentVersion: 5.3.9104
        appliance.sourcegraph.com/managed: "true"
      creationTimestamp: "2024-04-19T00:00:00Z"
      name: sg
      namespace: NORMALIZED_FOR_TESTING
      resourceVersion: NORMALIZED_FOR_TESTING
      uid: NORMALIZED_FOR_TESTING
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      annotations:
        appliance.sourcegraph.com/configHash: 2b72058f008a684f7fa052f8ad33d0226af4cfb7973242c9103d6d1900da355e
      creationTimestamp: "2024-04-19T00:00:00Z"
      finalizers:
        - kubernetes.io/pvc-protection
      labels:
        deploy: sourcegraph
      name: blobstore
      namespace: NORMALIZED_FOR_TESTING
      ownerReferences:
        - apiVersion: v1
          blockOwnerDeletion: true
          controller: true
          kind: ConfigMap
          name: sg
          uid: NORMALIZED_FOR_TESTING
      resourceVersion: NORMALIZED_FOR_TESTING
      uid: NORMALIZED_FOR_TESTING
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 100Gi
      volumeMode: Filesystem
    status:
      phase: Pending
  - apiVersion: v1
    kind: ServiceAccount
    metadata:
      annotations:
        appliance.sourcegraph.com/configHash: c7ada10d28d26c809f8b7e71aabb5a65420c3c2f306a364d3b9b966189d84a05
      creationTimestamp: "2024-04-19T00:00:00Z"
      labels:
        deploy: sourcegraph
      name: grafana
      namespace: NORMALIZED_FOR_TESTING
      ownerReferences:
        - apiVersion: v1
          blockOwnerDeletion: true
          controller: true
          kind: ConfigMap
          name: sg
          uid: NORMALIZED_FOR_TESTING
      resourceVersion: NORMALIZED_FOR_TESTING
      uid: NORMALIZED_FOR_TESTING
  - apiVersion: v1
    kind: ServiceAccount
    metadata:
      annotations:
        appliance.sourcegraph.com/configHash: 24debcd57654ec9bad2bc69454c6c9eb407fa072782198b3410f88874cd2eb25
      creationTimestamp: "2024-04-19T00:00:00Z"
      labels:
        deploy: sourcegraph
      name: worker
      namespace: NORMALIZED_FOR_TESTING
      ownerReferences:
        - apiVersion: v1
          blockOwnerDeletion: true
          controller: true
          kind: ConfigMap
          name: sg
          uid: NORMALIZED_FOR_TESTING
      resourceVersion: NORMALIZED_FOR_TESTING
      uid: NORMALIZED_FOR_TESTING
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        appliance.sourcegraph.com/configHash: 2b72058f008a684f7fa052f8ad33d0226af4cfb7973242c9103d6d1900da355e
      creationTimestamp: "2024-04-19T00:00:00Z"
      labels:
        app: blobstore
        app.kubernetes.io/component: blobstore
        deploy: sourcegraph
      name: blobstore
      namespace: NORMALIZED_FOR_TESTING
      ownerReferences:
        - apiVersion: v1
          blockOwnerDeletion: true
          controller: true
          kind: ConfigMap
          name: sg
          uid: NORMALIZED_FOR_TESTING
      resourceVersion: NORMALIZED_FOR_TESTING
      uid: NORMALIZED_FOR_TESTING
    spec:
      clusterIP: NORMALIZED_FOR_TESTING
      clusterIPs:
        - NORMALIZED_FOR_TESTING
      internalTrafficPolicy: Cluster
      ipFamilies:
        - IPv4
      ipFamilyPolicy: SingleStack
      ports:
        - name: blobstore
          port: 9000
          protocol: TCP
          targetPort: blobstore
      selector:
        app: blobstore
      sessionAffinity: None
      type: ClusterIP
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        appliance.sourcegraph.com/configHash: c7ada10d28d26c809f8b7e71aabb5a65420c3c2f306a364d3b9b966189d84a05
      creationTimestamp: "2024-04-19T00:00:00Z"
      labels:
        app: grafana
        app.kubernetes.io/component: grafana
        deploy: sourcegraph
      name: grafana
      namespace: NORMALIZED_FOR_TESTING
      ownerReferences:
        - apiVersion: v1
          blockOwnerDeletion: true
          controller: true
          kind: ConfigMap
          name: sg
          uid: NORMALIZED_FOR_TESTING
      resourceVersion: NORMALIZED_FOR_TESTING
      uid: NORMALIZED_FOR_TESTING
    spec:
      clusterIP: NORMALIZED_FOR_TESTING
      clusterIPs:
        - NORMALIZED_FOR_TESTING
      internalTrafficPolicy: Cluster
      ipFamilies:
        - IPv4
      ipFamilyPolicy: SingleStack
      ports:
        - name: http
          port: 3181
          protocol: TCP
          targetPort: http
        - name: debug
          port: 6060
          protocol: TCP
          targetPort: debug
      selector:
        app: grafana
      sessionAffinity: None
      type: ClusterIP
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        appliance.sourcegraph.com/configHash: 24debcd57654ec9bad2bc69454c6c9eb407fa072782198b3410f88874cd2eb25
        prometheus.io/port: "6060"
        sourcegraph.prometheus/scrape: "true"
      creationTimestamp: "2024-04-19T00:00:00Z"
      labels:
        app: worker
        app.kubernetes.io/component: worker
        deploy: sourcegraph
      name: worker
      namespace: NORMALIZED_FOR_TESTING
      ownerReferences:
        - apiVersion: v1
          blockOwnerDeletion: true
          controller: true
          kind: ConfigMap
          name: sg
          uid: NORMALIZED_FOR_TESTING
      resourceVersion: NORMALIZED_FOR_TESTING
      uid: NORMALIZED_FOR_TESTING
    spec:
      clusterIP: NORMALIZED_FOR_TESTING
      clusterIPs:
        - NORMALIZED_FOR_TESTING
      internalTrafficPolicy: Cluster
      ipFamilies:
        - IPv4
      ipFamilyPolicy: SingleStack
      ports:
        - name: http
          port: 3189
          protocol: TCP
          targetPort: http
        - name: debug
          port: 6060
          protocol: TCP
          targetPort: debug
      selector:
        app: worker
      sessionAffinity: None
      type: ClusterIP
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        appliance.sourcegraph.com/configHash: 24debcd57654ec9bad2bc69454c6c9eb407fa072782198b3410f88874cd2eb25
        prometheus.io/port: "6996"
        sourcegraph.prometheus/scrape: "true"
      creationTimestamp: "2024-04-19T00:00:00Z"
      labels:
        app: worker-executors
        app.kubernetes.io/component: worker-executors
        deploy: sourcegraph
      name: worker-executors
      namespace: NORMALIZED_FOR_TESTING
      ownerReferences:
        - apiVersion: v1
          blockOwnerDeletion: true
          controller: true
          kind: ConfigMap
          name: sg
          uid: NORMALIZED_FOR_TESTING
      resourceVersion: NORMALIZED_FOR_TESTING
      uid: NORMALIZED_FOR_TESTING
    spec:
      clusterIP: NORMALIZED_FOR_TESTING
      clusterIPs:
        - NORMALIZED_FOR_TESTING
      internalTrafficPolicy: Cluster
      ipFamilies:
        - IPv4
      ipFamilyPolicy: SingleStack
      ports:
        - name: prom
          port: 6996
          protocol: TCP
          targetPort: prom
      selector:
        app: worker
      sessionAffinity: None
      type: ClusterIP
    status:
      loadBalancer: {}
