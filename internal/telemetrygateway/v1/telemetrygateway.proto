syntax = "proto3";

package telemetrygateway.v1;

import "google/protobuf/timestamp.proto";
import "google/protobuf/struct.proto";

option go_package = "github.com/sourcegraph/sourcegraph/internal/telemetrygateway/v1";

service TelemeteryGatewayService {
  rpc RecordEvents(stream RecordEventsRequest) returns (RecordEventsResponse) {}
}

message RecordEventsRequest {
  message Metadata {
    // Self-reported identifier for analytics purposes. Currently, this is an
    // analytics prefix and the instance license key hashed together.
    string analytics_identifier = 1;
  }

  oneof payload {
    // Metadata about the events being recorded.
    Metadata metadata = 1;
    // Event to record.
    Event event = 2;
  }
}

message RecordEventsResponse {}

message Event {
  // Generated ID of the event.
  string id = 1;
  // Timestamp of when the original event was recorded.
  google.protobuf.Timestamp timestamp = 2;
  // Feature associated with the event in camelCase, e.g. 'myFeature'.
  string feature = 3;
  // Action associated with the event in camelCase, e.g. 'pageView'.
  string action = 4;
  // Source of the event.
  EventSource source = 5;
  // Parameters of the event.
  EventParameters parameters = 6;
  // Optional user associated with the event.
  optional EventUser user = 7;
  // Optional marketing campaign tracking parameters.
  optional EventMarketingTracking marketing_tracking = 8;
}

message EventSource {
  message Server {
    string version = 1;
  }
  message Client {
    string name = 1;
    string version = 2;
  }

  // Information about the Sourcegraph instance that received the event.
  Server server = 1;
  // Information about the client that generated the event.
  optional Client client = 2;
}

message EventParameters {
  // Version of the event parameters, used for indicating the "shape" of this
  // event's metadata, beginning at 0.
  int32 version = 1;
  // Strictly typed metadata, restricted to integer values.
  map<string, int64> metadata = 2;
  // Additional potentially sensitive metadata - i.e. not restricted to integer
  // values. By default, this metadata should not be assumed to be unsafe for
  // export from an instance, and should only be exported on an allowlist basis.
  optional google.protobuf.Struct private_metadata = 3;
  // Billing-related metadata.
  optional EventBillingMetadata billing_metadata = 4;
}

message EventBillingMetadata {
  // Billing product ID associated with the event.
  string product = 1;
  // Billing category ID the event falls into.
  string category = 2;
}

message EventUser {
  // Database user ID of signed in user.
  //
  // We use an int64 as an ID because in Sourcegraph, database user IDs are
  // always integers.
  int64 user_id = 1;
  // Randomized unique identifier for client (i.e. stored in localstorage in web
  // client).
  string anonymous_user_id = 2;
}

message EventMarketingTracking {
  string url = 1;
  string first_source_url = 2;
  string cohort_id = 3;
  string referrer = 4;
  string last_source_url = 5;
  string device_session_id = 6;
  string session_referrer = 7;
  string session_first_url = 8;
}
