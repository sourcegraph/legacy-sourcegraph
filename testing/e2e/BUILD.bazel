load("@npm//:defs.bzl", "npm_link_all_packages")
load("@npm//testing/e2e:@playwright/test/package_json.bzl", playwright_test_bin = "bin")

npm_link_all_packages(name = "node_modules")

PLAYWRIGHT_DEPS = [
    "//testing/e2e:node_modules/@playwright/test",
    "//testing/e2e:node_modules/playwright",
]

playwright_test_bin.playwright_test(
    name = "e2e_test",
    timeout = "long",
    args = [
        "test",
        "--config $(location playwright.config.ts)",
    ],
    data = glob(
        [
            "tests/**/*.spec.ts",
        ],
    ) + [
        "playwright.config.ts",
        "//dev/tools:chromium",
    ] + PLAYWRIGHT_DEPS,
    env = {
        "CHROMIUM_BIN": "$(rootpath //dev/tools:chromium)",
        "BAZEL": "1",
    },
    tags = [
        "manual",  # We never want normal CI runs to include this.
        "no-cache",  # Because those tests are meant to target a real live instance, that lives outside the inputs, there's no point in caching.
        "requires-network",
    ],
)

# This should be a run, but I'm getting weird errors when I try.
# To reproduce, ...bin.playwright_test -> ...bin.playwright_binary and bazel run the target.
playwright_test_bin.playwright_test(
    name = "e2e_test_ui",
    timeout = "eternal",
    args = [
        "test",
        "--config $(location playwright.config.ts)",
        "--ui",
    ],
    data = glob(
        [
            "tests/**/*.spec.ts",
        ],
    ) + [
        "playwright.config.ts",
        "//dev/tools:chromium",
    ] + PLAYWRIGHT_DEPS,
    env = {
        "CHROMIUM_BIN": "$(rootpath //dev/tools:chromium)",
        "BAZEL": "1",
    },
    tags = [
        "manual",  # We never want normal CI runs to include this.
        "no-cache",  # Because those tests are meant to target a real live instance, that lives outside the inputs, there's no point in caching.
        "requires-network",
    ],
)
